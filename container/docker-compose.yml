version: "3.8"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - external
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.7.1
    hostname: broker
    container_name: broker
    networks:
      - external
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_JMX_PORT: 9101
#      KAFKA_JMX_HOSTNAME: localhost
    depends_on:
      - zookeeper

  ksql-server:
    image: confluentinc/cp-ksqldb-server:7.7.1
    hostname: ksql-server
    container_name: ksql-server
    networks:
      - external
    ports:
      - 8088:8088
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksql-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
    depends_on:
      - broker

  ksql-cli:
    image: confluentinc/cp-ksqldb-cli:7.7.1
    hostname: ksql-cli
    container_name: ksql-cli
    networks:
      - external
    depends_on:
      - ksql-server
    entrypoint: /bin/sh
    tty: true

  debezium:
    image: debezium/connect:3.0.0.Final
    hostname: debezium
    container_name: debezium
    networks:
      - external
    ports:
      - 8083:8083
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: broker:29092
      CONFIG_STORAGE_TOPIC: _kafka_connect_configs
      OFFSET_STORAGE_TOPIC: _kafka_connect_offsets
      STATUS_STORAGE_TOPIC: _kafka_connect_statuses
    depends_on:
      - broker
      - mysql

  mysql:
    image: mysql:8.0
    hostname: mysql
    container_name: mysql
    networks:
      - external
    ports:
      - 3306:3306
    command: mysqld
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d

  streams:
    hostname: streams
    container_name: streams
    build:
      context: ./streams
      dockerfile: Dockerfile
    volumes:
      - ../development/streams:/streams
    working_dir: /streams
    entrypoint: ./apisl.handson.kafka.streams/RUN_STREAMS.sh
    networks:
      - external
    tty: true

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.7.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - ksql-server
    networks:
      - external
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'debezium:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksql-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
#      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

networks:
  external:
    name: hands-net
    driver: bridge
